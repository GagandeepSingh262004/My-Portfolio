import React from "react";
import gsap from "gsap";
import { useGSAP } from "@gsap/react";
import { DiMongodb } from "react-icons/di";
import { SiExpress } from "react-icons/si";
import { FaReact } from "react-icons/fa";
import { FaNodeJs } from "react-icons/fa";
import { ScrollTrigger } from "gsap/dist/ScrollTrigger";

const Home = () => {
  gsap.registerPlugin(useGSAP);
  gsap.registerPlugin(ScrollTrigger);
  let mm = gsap.matchMedia();
  useGSAP(() => {
    mm.add("(min-width: 768px)", () => {
      const t1 = gsap.timeline({
        scrollTrigger: {
          trigger: ".home",
          start: "5% top",
          end: "bottom bottom",
          scrub: 2,
          markers: false,
        },
      });

      t1.fromTo(
        ".card1",
        {
          x: -280,
          y: 25,
          rotate: "-10deg",
          // transform: translateX(-280px) translateY(25px) rotate(-10deg);
          ease: "back.out",
          duration: 0.4,
        },
        {
          x: 0,
          y: 0,
          rotate: 0,
          ease: "back.inOut",
          duration: 0.8,
        }
      );
      t1.fromTo(
        ".card2",
        {
          x: -50,
          rotate: "-5deg",
          ease: "back.out",
          duration: 0.4,
          // transform: translateX(-50px) rotate(-5deg);
        },
        {
          x: 0,
          y: 0,
          rotate: 0,
          ease: "back.inOut",
          duration: 0.8,
        }
      );

      t1.fromTo(
        ".card3",
        {
          x: 180,
          rotate: "3deg",
          ease: "back.out",
          duration: 0.4,
          // transform: translateX(180px) rotate(3deg);
        },
        {
          x: 0,
          y: 0,
          rotate: 0,
          ease: "back.inOut",
          duration: 0.8,
        }
      );

      t1.fromTo(
        ".card4",
        {
          x: 370,
          y: 20,
          rotate: "7deg",
          ease: "back.out",
          duration: 0.4,
          // transform: translateX(370px) translateY(20px) rotate(7deg);
        },
        {
          x: 0,
          y: 0,
          rotate: 0,
          ease: "back.inOut",
          duration: 0.8,
        }
      );
    });
    mm.add("(max-width:765px)", () => {
      const t3 = gsap.timeline({
        scrollTrigger: {
          trigger: ".home",
          start: "5% top",
          end: "bottom bottom",
          scrub: 2,
          markers: false,
        },
      });
      t3.to(".card-down", {
        y: 0,
      });
    });
  }, []);

  useGSAP(() => {
    mm.add("(min-width: 768px)", () => {
      console.log("Executed");
      const t2 = gsap.timeline({
        scrollTrigger: {
          trigger: ".about",
          start: "top 20%",
          end: "bottom bottom",
          scrub: true,
          markers: false,
        },
      });

      t2.fromTo(
        ".card-down",
        { y: 0, x: 0, opacity: 1 },
        { y: 450, x: 150, opacity: 0, ease: "power2.inOut", duration: 1 }
      );

      // Animate zoom cards
      t2.fromTo(
        ".card-zoom1",
        { scale: 1, x: 0, y: 0, opacity: 0 },
        {
          scale: 1.1,
          x: 525,
          y: 80,
          opacity: 1,
          ease: "power3.in",
          duration: 1,
        },
        "<"
      );

      t2.fromTo(
        ".card-zoom2",
        { scale: 1, x: 0, y: 0, opacity: 0 },
        {
          scale: 1.2,
          x: 425,
          y: 50,
          opacity: 1,
          ease: "power3.in",
          duration: 1,
        },
        "<0.2"
      );

      t2.fromTo(
        ".card-zoom3",
        { scale: 1, x: 0, y: 0, opacity: 0 },
        {
          scale: 1.3,
          x: 285,
          y: 30,
          opacity: 1,
          ease: "power3.in",
          duration: 1,
        },
        "<0.2"
      );

      t2.fromTo(
        ".card-zoom4",
        { scale: 1, x: 0, y: 0, opacity: 0 },
        {
          scale: 1.4,
          x: 130,
          y: 10,
          opacity: 1,
          ease: "power3.in",
          duration: 1,
        },
        "<0.2"
      );
    });
    mm.add("(max-width: 768px)", () => {
      console.log("Mobile");
      const t2 = gsap.timeline({
        scrollTrigger: {
          trigger: ".about",
          start: "top 20%",
          end: "bottom bottom",
          scrub: true,
          markers: false,
        },
      });
      t2.to(".about", {
        display: "flex",
        flexDirection: "column",
      });
    });
  }, []);

  return (
    <>
      <div className="w-full h-screen home">
        <div className="flex flex-col items-center pt-4 font-ital">
          <p className="fade-in font-semibold italic">New Delhi, India</p>
          <a
            href="mailto:gagandeepsingh262004@gmail.com"
            className="fade-in font-medium italic text-[#9CA3AF]"
          >
            gagandeepsingh262004@gmail.com
          </a>
          <div className="pt-10 text-center">
            <h1 className="fade-in text-6xl md:text-8xl font-semibold uppercase tracking-wider leading-tight">
              GaganDeep <br />
              Singh
            </h1>
            <p className="fade-in font-medium italic text-[#9CA3AF] pt-4 max-w-xl mx-auto">
              Building modern web apps with MongoDB, Express, React, and
              Node.js.
            </p>
          </div>
        </div>

        <div className="flex w-full items-center justify-center cards card-down pt-24 ">
          <div className="flex items-center justify-center w-full relative  flex-col sm:flex-col">
            <div className="card1 flex flex-col bg-[#353C45] card">
              <DiMongodb className="text-8xl text-[#549332]" />
              <p className="font-semibold font-ital text-white">MongoDb</p>
            </div>
            <div className="card2 flex flex-col card">
              <SiExpress className="text-8xl text-[#F7F7F7]" />
              <p className="font-semibold font-ital text-[#F7F7F7]">
                Express Js
              </p>
            </div>
            <div className="card3 flex flex-col card">
              <FaReact className="text-8xl text-[#5AC6E1]" />
              <p className="font-semibold font-ital">React Js</p>
            </div>
            <div className="card4 flex flex-col card">
              <FaNodeJs className="text-8xl text-white" />
              <p className="font-semibold font-ital text-white">Node Js</p>
            </div>{" "}
          </div>
        </div>
      </div>

      <div className="h-full w-full about px-8 pt-24  ">
        <h2 className="uppercase font-medium font-ital text-6xl">About</h2>
        <div className="pt-5">
          <h2 className="text-4xl font-semibold leading-tight">
            Turning Vision into{" "}
            <span className="text-[#990900]">Interactive</span>,<br />
            <span>Dynamic</span>, and <br />
            <span className="text-[#990900]">Scalable</span> Websites.
          </h2>
        </div>
        <div className="flex justify-around items-start gap-10">
          {/* Left Text */}
          <div className="w-1/2 pt-14">
            <h2 className="text-3xl font-semibold font-ital">
              Hi, I&rsquo;m GaganDeep Singh, a MERN Stack Developer.
            </h2>

            <p className="pt- text-medium text-[#9CA3AF] text-xl">
              I&rsquo;ve developed several practice projects that showcase my
              skills in building modern, responsive web applications. I&rsquo;m
              passionate about creating dynamic, scalable solutions with
              MongoDB, Express.js, React, and Node.js that deliver seamless and
              engaging user experiences. In my portfolio, you&rsquo;ll find
              examples of my work that highlight my commitment to writing clean,
              efficient code and crafting intuitive designs. I&rsquo;m excited
              to continue growing as a developer and contribute innovative ideas
              to every project I take on.
            </p>
          </div>

          {/* Right Cards */}
          <div className="w-1/2 relative h-[400px] card-conatiner">
            {/* MongoDB Card */}
            <div className="card-zoom1 absolute w-[250px] h-[250px] flex justify-center items-center rounded-[20px] transition-transform duration-300 ease bg-[#353C45] z-40">
              <div className="flex flex-col justify-center items-center">
                <DiMongodb className="text-8xl text-[#549332]" />
                <p className="font-semibold font-ital text-white">MongoDb</p>
              </div>
            </div>

            {/* Express Card */}
            <div className="card-zoom2 absolute w-[250px] h-[250px] flex justify-center items-center rounded-[20px] transition-transform duration-300 ease bg-[#3178C6] z-30">
              <div className="flex flex-col justify-center items-center">
                <SiExpress className="text-8xl text-white" />
                <p className="font-semibold font-ital text-white">Express Js</p>
              </div>
            </div>

            {/* React Card */}
            <div className="card-zoom3 absolute w-[250px] h-[250px] flex justify-center items-center rounded-[20px] transition-transform duration-300 ease bg-[#E1FFDE] z-20">
              <div className="flex flex-col justify-center items-center">
                <FaReact className="text-8xl text-[#5AC6E1]" />
                <p className="font-semibold font-ital text-black">React JS</p>
              </div>
            </div>

            {/* Node Card */}
            <div className="card-zoom4 absolute w-[250px] h-[250px] flex justify-center items-center rounded-[20px] transition-transform duration-300 ease bg-[#2D2D2D] z-10">
              <div className="flex flex-col justify-center items-center">
                <FaNodeJs className="text-8xl text-white" />
                <p className="font-semibold font-ital text-white">Node Js</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="h-screen">
        <div className="p-9 pt-20">
          <h2 className="text-[#9CA3AF] uppercase font-bold text-8xl px-10">
            My Projects
          </h2>
          <div className="pt-14 flex justify-between">
            <a
              href="https://temptrack12.netlify.app/"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-block"
            >
              <div className="border border-white h-[550px] w-fit p-4 flex items-center bg-gradient-to-br from-[#597eac] via-[#405c84] to-[#2f4569] rounded-xl shadow-xl cursor-pointer transition-transform duration-300 hover:scale-105">
                <img
                  src="/WeatherApp.png"
                  alt="Weather App"
                  className="h-[400px] w-[600px] object-cover rounded-xl"
                />
              </div>
            </a>

            <a
              href="https://omdbmovsea.netlify.app/"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-block"
            >
              <div className="border border-white h-[550px] w-fit p-4 flex items-center bg-[#000000] rounded-xl shadow-xl cursor-pointer transition-transform duration-300 hover:scale-105">
                <img
                  src="/Omdb.png"
                  alt="OMDB App"
                  className="h-[400px] w-[600px] object-contain rounded-xl"
                />
              </div>
            </a>
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
